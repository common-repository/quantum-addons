{"version":3,"file":"./js/advance-slider/minified/advance-slider.min.js","mappings":"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","sources":["webpack://quantum-addons/./assets/js/advance-slider/advance-slider.js"],"sourcesContent":["import \"../../css/advance-slider/advance-slider.css\";\r\n\r\nclass advanceSlider extends elementorModules.frontend.handlers.SwiperBase  {\r\n   constructor( e )  {\r\n      super( e );\r\n      this.outerContainerSelector = \"\";\r\n   }\r\n\r\n   getDefaultSettings()  {\r\n      return {\r\n         selectors: {\r\n            outerContainer: \".el-quantum-advance-slider-outer-container\",\r\n            container: \".el-quantum-advance-slider-container\",\r\n         },\r\n      }\r\n   }\r\n\r\n   getDefaultElements()  {\r\n      const selectors = this.getSettings( \"selectors\" );\r\n\r\n      return {\r\n         $container: this.$element.find( selectors.outerContainer + \" \" + selectors.container ),\r\n      }\r\n   }\r\n\r\n   onInit()  {\r\n      this.outerContainerSelector = \".\" + Array.from( this.$element[0].classList ).join( \".\" );\r\n      this.initSwiper( this.getDefaultElements().$container );\r\n   }\r\n\r\n   async initSwiper( el )  {\r\n      let swiperConfig = this.getSwiperConfig();\r\n\r\n      /// Swiper elementor internal library\r\n      const Swiper = elementorFrontend.utils.swiper;\r\n      const newSwiperInstance = await new Swiper( el, swiperConfig );\r\n\r\n      wp.hooks.doAction( \"quantum_adslider_swiper_instance\", newSwiperInstance, this.$element[0] );\r\n\r\n      ///adding swiper instance to container with Jquery data function\r\n      ///P.S i don't know why anyone will need this, but just leaving it right here for now\r\n      this.getDefaultElements().$container.data( \"swiper\", newSwiperInstance );\r\n   }\r\n\r\n   getSwiperConfig()  {\r\n      ///all the elements settings\r\n      const settings = this.getElementSettings();\r\n      const elementorBreakpoints = elementorFrontend.config.responsive.activeBreakpoints;\r\n      const desktopSlideToShow = +settings['slide_per_view'];\r\n      const desktopCenterSlides = +settings['center_slide'] ? true : false;\r\n      const desktopSpaceBetween = +settings['space_between'];\r\n      const desktopSlidePerGroup = +settings['slide_per_group'];\r\n      const isPaginationClickable = settings['is_pagination_clickable'] === 'yes' ? true : false;\r\n      const paginationType = settings['pagination_type'];\r\n      const isScrollbarDraggable = settings['is_scrollbar_draggable'] === 'yes' ? true : false;\r\n      const isAutoPlayOn = settings['slide_opt_autoplay'] ? true : false;\r\n\r\n      let customNextBtn = settings['custom_navigation_next_button_selector'];\r\n      let customPrevBtn = settings['custom_navigation_prev_button_selector'];\r\n      let customPagination = settings['custom_pagination_selector'];\r\n      let customScrollbar = settings['custom_scrollbar_selector'];\r\n\r\n      if( typeof customNextBtn === 'string' )  customNextBtn = customNextBtn.trim();\r\n\r\n      if( typeof customPrevBtn === 'string' )  customPrevBtn = customPrevBtn.trim();\r\n\r\n      if( typeof customPagination === 'string' )  customPagination = customPagination.trim();\r\n\r\n      if( typeof customScrollbar === 'string' )  customScrollbar = customScrollbar.trim();\r\n\r\n      ///add swiper scrollbar css class to custom scrollbar\r\n      if( customScrollbar )  {\r\n         const scrollbarEl = document.querySelector( customScrollbar );\r\n         if( scrollbarEl )  scrollbarEl.classList.add( 'swiper-scrollbar' );\r\n      }\r\n\r\n      ///basic swiper config\r\n      const swiperConfig = {\r\n         direction: \"horizontal\",\r\n         loop: settings[\"loop\"] ? true : false,\r\n         slidesPerView: desktopSlideToShow,\r\n         centeredSlides: desktopCenterSlides,\r\n         spaceBetween: desktopSpaceBetween,\r\n         slidesPerGroup: desktopSlidePerGroup,\r\n         pagination: {\r\n            el: customPagination ? customPagination : \".swiper-pagination\",\r\n            clickable: isPaginationClickable,\r\n            type: paginationType,\r\n         },\r\n         navigation: {\r\n            nextEl: customNextBtn ? customNextBtn : this.outerContainerSelector + \" \" + \".el-quantum-next-btn\",\r\n            prevEl: customPrevBtn ? customPrevBtn : this.outerContainerSelector + \" \" + \".el-quantum-prev-btn\",\r\n         },\r\n         scrollbar: {\r\n            el: customScrollbar ? customScrollbar : \".el-quantum-slider-scrollbar\",\r\n            draggable: isScrollbarDraggable,\r\n         },\r\n         breakpoints: {},\r\n         ///i saw this code in Elementor source code and this seems to\r\n         ///\"correct\" the breakpoints according to swiper breakpoints\r\n         handleElementorBreakpoints: true,\r\n         on: {\r\n            init: ( swiper ) => {\r\n               wp.hooks.doAction( \"quantum_adslider_initiated\", swiper, this.$element[0] );\r\n            }\r\n         }\r\n      }\r\n\r\n      if( isAutoPlayOn ) {\r\n         // default options will be applied when empty object given\r\n         swiperConfig.autoplay = {};\r\n         const autoplayDelay = settings['slide_opt_autoplay_delay'];\r\n         const disableOnInteraction = settings['slide_opt_autoplay_disable_on_interaction'];\r\n         const pauseOnMouseEnter = settings['slide_opt_autoplay_pause_on_mouseover'];\r\n\r\n         if( autoplayDelay ) {\r\n            swiperConfig.autoplay.delay = autoplayDelay;\r\n         }\r\n\r\n         if( typeof disableOnInteraction !== \"undefined\" ) {\r\n            swiperConfig.autoplay.disableOnInteraction = disableOnInteraction ? true : false;\r\n         }\r\n\r\n         if( typeof pauseOnMouseEnter !== \"undefined\" ) {\r\n            swiperConfig.autoplay.pauseOnMouseEnter = pauseOnMouseEnter ? true : false;\r\n         }\r\n      }\r\n\r\n      ////add breakpoints values to swiper config\r\n      Object.keys( elementorBreakpoints ).reverse().forEach( ( breakpointName ) =>  {\r\n         const autoplayOpt = {};\r\n\r\n         if( isAutoPlayOn ) {\r\n            const autoplayDelay = settings['slide_opt_autoplay_delay_' + breakpointName];\r\n            const disableOnInteraction = settings['slide_opt_autoplay_disable_on_interaction_' + breakpointName];\r\n            const pauseOnMouseEnter = settings['slide_opt_autoplay_pause_on_mouseover_' + breakpointName];\r\n\r\n            if( typeof autoplayDelay !== 'undefined' ) {\r\n               autoplayOpt.delay = autoplayDelay;\r\n            }\r\n\r\n            if( typeof disableOnInteraction !== 'undefined' ) {\r\n               autoplayOpt.disableOnInteraction = disableOnInteraction ? true : false;\r\n            }\r\n\r\n            if( typeof pauseOnMouseEnter !== 'undefined' ) {\r\n               autoplayOpt.pauseOnMouseEnter = pauseOnMouseEnter ? true : false;\r\n            }\r\n         }\r\n\r\n         const breakpointPixel = elementorBreakpoints[breakpointName].value;\r\n\r\n\t\t\tswiperConfig.breakpoints[breakpointPixel] = {\r\n\t\t\t\tslidesPerView: +settings['slide_per_view_' + breakpointName],\r\n            centeredSlides: +settings['center_slide_' + breakpointName] ? true : false,\r\n\t\t\t\tspaceBetween: +settings['space_between_' + breakpointName],\r\n\t\t\t\tslidesPerGroup: +settings['slide_per_group_' + breakpointName],\r\n\t\t\t}\r\n\r\n         if( Object.keys( autoplayOpt ).length > 0 ) {\r\n            swiperConfig.breakpoints[elementorBreakpoints[ breakpointName ].value].autoplay = autoplayOpt;\r\n         }\r\n\t\t});\r\n\r\n      return wp.hooks.applyFilters( \"quantum_adslider_after_init_swiper_config\", swiperConfig, this.$element[0] );\r\n   }\r\n}\r\n\r\njQuery( window ).on( \"elementor/frontend/init\", () =>  {\r\n   const addHandler = ( $element ) => {\r\n      elementorFrontend.elementsHandler.addHandler( advanceSlider, { $element } );\r\n   }\r\n\r\n   elementorFrontend.hooks.addAction(\r\n      \"frontend/element_ready/Advance_slider.default\",\r\n      addHandler\r\n   );\r\n});\r\n"],"names":["selectors","el","swiperConfig","Swiper","newSwiperInstance","settings","elementorBreakpoints","desktopSlideToShow","desktopCenterSlides","desktopSpaceBetween","desktopSlidePerGroup","isPaginationClickable","paginationType","isScrollbarDraggable","isAutoPlayOn","customNextBtn","customPrevBtn","customPagination","customScrollbar","scrollbarEl","swiper","autoplayDelay","disableOnInteraction","pauseOnMouseEnter","breakpointName","autoplayOpt","breakpointPixel","addHandler","$element"],"sourceRoot":""}